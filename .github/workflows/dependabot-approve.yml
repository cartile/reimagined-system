name: Approve Potential Dependabot PRs
on:
  #on: pull_request_target
  #schedule:
  push:
    branches: test
  workflow_dispatch:
permissions:
  pull-requests: write
  contents: write
#           gh pr -R "$GITHUB_REPOSITORY" list --search "updated:<$well_aged is:pr is:open author:app/dependabot" --json additions,assignees,author,autoMergeRequest,baseRefName,body,changedFiles,closed,closedAt,comments,commits,createdAt,deletions,files,fullDatabaseId,headRefName,headRefOid,headRepository,headRepositoryOwner,id,isCrossRepository,isDraft,labels,latestReviews,maintainerCanModify,mergeCommit,mergeStateStatus,mergeable,mergedAt,mergedBy,milestone,number,potentialMergeCommit,projectCards,reactionGroups,reviewDecision,reviewRequests,reviews,state,statusCheckRollup,title,updatedAt,url > open-prs.json
#          (
#            echo '```json'
#            cat open-prs.json
#            echo '```'
#          ) >> $GITHUB_STEP_SUMMARY
env:
  #threshold: 27
  # for testing purposes
  threshold: 1
jobs:
  dependabot:
    runs-on: ubuntu-latest
    steps:
      - name: Read Artifacts
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -x
          well_aged=(date +%Y-%m-%d --date="$threshold days ago")

          gh pr -R "$GITHUB_REPOSITORY" list --search "is:pr is:open author:app/dependabot" --json additions,assignees,author,autoMergeRequest,baseRefName,body,changedFiles,closed,closedAt,comments,commits,createdAt,deletions,files,fullDatabaseId,headRefName,headRefOid,headRepository,headRepositoryOwner,id,isCrossRepository,isDraft,labels,latestReviews,maintainerCanModify,mergeCommit,mergeStateStatus,mergeable,mergedAt,mergedBy,milestone,number,potentialMergeCommit,projectCards,reactionGroups,reviewDecision,reviewRequests,reviews,state,statusCheckRollup,title,updatedAt,url | jq '.' > open-prs.json
          (
            echo '```json'
            cat open-prs.json
            echo '```'
          ) >> $GITHUB_STEP_SUMMARY

          for workflow_run in $(
            gh run -R "$GITHUB_REPOSITORY" list \
              -e 'pull_request' \
              -u 'dependabot' \
              -s success \
              -w dependabot-metadata.yml \
              --json databaseId |
              jq '.[].databaseId'
            ); do
            rm -f update-type.txt
            if gh run -R "$GITHUB_REPOSITORY" download \
               -n version-update \
              $workflow_run; then
              echo $workflow_run $(cat update-type.txt) |
                tee -a "$GITHUB_STEP_SUMMARY"
            fi
          done
      - name: Approve Valid PRs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "### Approved Pull Requests" >> $GITHUB_STEP_SUMMARY
          jq -r '.[].url' open-prs.json | while read -r url; do
            echo "Approving PR: $url"
            if gh pr review --approve "$url"; then
              echo "✅ Approved PR: [$url]($url)" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Failed to approve PR: [$url]($url)" >> $GITHUB_STEP_SUMMARY
            fi
          done

      # Finally, this sets the PR to allow auto-merging for patch and minor
      # updates if all checks pass
      #- name: Enable auto-merge for Dependabot PRs
      #  if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
      #  env:
      #    PR_URL: ${{ github.event.pull_request.html_url }}
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: gh pr merge --auto --squash "$PR_URL"

